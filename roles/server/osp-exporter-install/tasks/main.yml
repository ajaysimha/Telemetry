- name: Copy packages required for osp-exporter to /tmp
  copy:
    src: "{{ item }}"
    dest: /tmp
  with_items:
    - "{{ telemetry_home }}/packages/{{ prometheus_client }}"
    - "{{ telemetry_home }}/packages/{{ pip_pkg }}"

- name: Check if PIP is installed
  yum:
    list: python2-pip
    state: installed
  register: pip_pkg_status

- name: Install PIP package if absent
  yum:
    name: "/tmp/{{ pip_pkg }}"
    state: present
  when: pip_pkg_status.results|selectattr("yumstate", "match", "absent")|list|length != 0

- name: Install Python Prometheus Client
  pip:
    name: "/tmp/{{ prometheus_client }}"
  when: pip_pkg_status.results|selectattr("yumstate", "match", "installed")|list|length != 0

- name: Copy OSP exporter python files to target 
  copy:
    src: osp-exporter
    dest: /opt

- name: Find the name of the osp-exporter directory
  find:
    path: /opt
    patterns: '*osp-exporter*'
    file_type: directory
  register: dir_name

- set_fact:
    osp_exporter_path: "{{ dir_name.files[0].path }}"

- name: Set main.py to be executable
  file:
    path: "{{ osp_exporter_path }}/main.py"
    mode: 0755

- name: Create config file env.yml
  template:
    src: env.yml.j2
    dest: "{{ osp_exporter_path }}/env_{{ portnum }}.yml"
  with_items: "{{ osp_exporter_config }}"
  vars:
    portnum: "{{ item.port }}"
    password: "{{ item.password }}"
    url: "{{ item.url }}"

- name: Create systemd service for osp exporter
  template:
    src: osp_exporter_systemd.j2
    dest: "/etc/systemd/system/osp_exporter_{{ portnum }}.service"
  with_items: "{{ osp_exporter_config }}"
  vars:
    portnum: "{{ item.port }}"

- name: Install latest version firewalld
  yum:
    name: firewalld
    state: latest

- name: Start firewalld service
  service:
    name: firewalld
    state: started

- name: Check if firewalld is installed
  yum:
    list: firewalld
  register: firewalld_op

- name: Open tcp port for OSP exporters
  firewalld:
    port: "{{ portnum }}/tcp"
    permanent: true
    state: enabled
    immediate: true
  with_items: "{{ osp_exporter_config }}"
  vars:
    portnum: "{{ item.port }}"
  when: firewalld_op.results|selectattr("yumstate", "match", "installed")|list|length != 0

- name: Start osp exporter service
  systemd:
    name: "osp_exporter_{{ portnum }}"
    state: restarted
    daemon_reload: yes
    enabled: yes
  vars: 
    portnum: "{{ item.port }}"
  with_items: "{{ osp_exporter_config }}"

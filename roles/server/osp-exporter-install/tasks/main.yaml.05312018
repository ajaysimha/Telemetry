#- name: Install Python PIP 
#  package:
#    name: python2-pip
#    state: present


- name: Copy packages required for osp-exporter /tmp
  copy:
    src: "{{ telemetry_home }}/packages/{{ item }}"
    dest: /tmp
  with_items:
    - "{{ prometheus_client }}"
#    - "{{ osp_exporter_packages }}"

- name: Install python2 package
  yum:
    name: "/tmp/{{ prometheus_client }}"
#    name: "/tmp/{{ python2_pip_pkg }}"
    state: present

#- name: Install required python modules using PIP
#  action: "{{ ansible_pkg_mgr }} name={{ item }} state=present"
#  with_items:
#    - python-nose
#    - python-sphinx
#    - python-dateutil
#    - python-simplejson
#    - python-yaml

- name: Install Python required packages 
  pip:
    name: "/tmp/{{ item }}"
    state: forcereinstall
  with_items:
    - "{{ python2_pip_pkg }}"
#    - "{{ osp_exporter_python_packages }}"

#- name: Install requests version 2.14.2
#  pip:
#    name: requests
#    state: present
#    version: 2.14.2

- name: Copy OSP exporter python files to target 
  copy:
    src: osp-exporter
    dest: /opt

- name: Find the name of the prometheus exporter directory
  find:
    path: /opt
    patterns: '*osp-exporter*'
    file_type: directory
  register: dir_name

- debug: var=dir_name.files[0].path

- set_fact:
    osp_exporter_path: "{{ dir_name.files[0].path }}"

- name: Set main.py to be executable
  file:
    path: "{{ osp_exporter_path }}/main.py"
    mode: 0755

- name: Create config file env.yaml
  template:
    src: env.yaml.j2
    dest: "{{ osp_exporter_path }}/env.yaml"

- name: Create systemd service for prometheus exporter
  template:
    src: osp_exporter_systemd.j2
    dest: /etc/systemd/system/osp_exporter.service

- name: Start prometheus exporter service
  systemd:
    name: osp_exporter
    state: started
    daemon_reload: yes
